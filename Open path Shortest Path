import java.util.*;

public class AmazonDelivery {
    public static int[] shortestPath(char[][] map, int[][] queries) {
        int m = map.length;
        int n = map[0].length;
        int[][] dist = new int[m][n];             // distance matrix
        for (int[] row : dist) Arrays.fill(row, -1);  // mark all cells as unvisited

        Queue<int[]> queue = new LinkedList<>();

                                                 // Step 1: Add all 'A' cells to queue with distance 0
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (map[i][j] == 'A') {
                    queue.offer(new int[]{i, j});
                    dist[i][j] = 0;
                }
            }
        }

                                                      // Step 2: BFS directions (up, down, left, right)
        int[][] dirs = {{1,0}, {-1,0}, {0,1}, {0,-1}};

                                                  // Step 3: BFS traversal
        while (!queue.isEmpty()) {
            int[] curr = queue.poll();

            for (int[] d : dirs) {
                int x = curr[0] + d[0];
                int y = curr[1] + d[1];

                if (x >= 0 && y >= 0 && x < m && y < n
                        && map[x][y] == 'O' && dist[x][y] == -1) {
                    dist[x][y] = dist[curr[0]][curr[1]] + 1;
                    queue.offer(new int[]{x, y});
                }
            }
        }

                                                             // Step 4: Answer queries
        int[] result = new int[queries.length];
        for (int i = 0; i < queries.length; i++) {
            int x = queries[i][0], y = queries[i][1];
            result[i] = dist[x][y];
        }
        return result;
    }

    // Sample run
    public static void main(String[] args) {
        char[][] map = {
            {'A', 'O', 'C'},
            {'O', 'O', 'O'},
            {'C', 'O', 'O'}
        };
        int[][] queries = {{1, 2}, {2, 1}};
        int[] ans = shortestPath(map, queries);
        System.out.println(Arrays.toString(ans)); // Output: [3, 2]
    }
}


    
